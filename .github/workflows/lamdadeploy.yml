name: Backend Lambda Deploy
on:
  push:
    branches:
      - feature/**
env:
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN || 'default' }}
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY || 'default' }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY || 'default' }}
  AWS_ENDPOINT_URL_SSO: ${{ vars.AWS_ENDPOINT_URL_SSO || 'default' }}
  AWS_PROFILE: ${{ vars.AWS_PROFILE || 'techstarter' }}

jobs:
  Lambda-Code-Or-Function:
    runs-on: ubuntu-latest
    outputs:
      LAMBDA_TF: ${{ steps.list-functions.outputs.LAMBDA_TF }}
    steps:
      - name: Lade neuen Repo-Zustand
        uses: actions/checkout@v4  
      - name: List Lambda Functions
        working-directory: ${{ github.workspace }}
        id: list-functions
        run: |
          cd ${{ github.workspace }}
          echo "LAMBDA_TF=$(bash ./.github/scripts/lsdirs.sh)" >> $GITHUB_OUTPUT
      - name: result list-functions
        run: echo "${{ steps.list-functions.outputs.LAMBDA_TF }}"

  Build-and-Zip-Lambdas:
    needs: Lambda-Code-Or-Function
    strategy:
      matrix:
        lambda_function: ${{ fromJson(needs.Lambda-Code-Or-Function.outputs.LAMBDA_TF)}}
    runs-on: ubuntu-latest
    steps:
      - name: Lade neuen Repo-Zustand
        uses: actions/checkout@v4  
      - name: Install zip
        uses: montudor/action-zip@v1       
      - name: installiere nodeJs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Display Funktion - ${{ matrix.lambda_function }}
        run: echo "packing Lambda-Funktion ${{ matrix.lambda_function }}"
      - name: install node_modules
        working-directory: ${{ matrix.lambda_function }}
        run: npm ci  
      - name: zip functions
        run: | 
          zip -q -r ${{ matrix.lambda_function }}.zip ${{ matrix.lambda_function }} node_modules package.json index.js package-lock.json
          echo "packed function ${{ matrix.lambda_function }}"
      - name: Display result
        run: echo "$(ls ${{ matrix.lambda_function }}.zip)"